{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ContadorComponent {\n  constructor() {\n    this.titulo = 'Contador App';\n    this.num = 10;\n    this.base = 5;\n  }\n  // En este lado si que podemos usar la forma corta de sumar mientras que en el html no\n  // sumar() {\n  //   this.num += 1;\n  // }\n  acumular(valor) {\n    this.num += valor;\n  }\n}\nContadorComponent.ɵfac = function ContadorComponent_Factory(t) {\n  return new (t || ContadorComponent)();\n};\nContadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContadorComponent,\n  selectors: [[\"app-contador\"]],\n  decls: 14,\n  vars: 6,\n  consts: [[3, \"click\"]],\n  template: function ContadorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"La base es: \");\n      i0.ɵɵelementStart(4, \"strong\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ContadorComponent_Template_button_click_6_listener() {\n        return ctx.acumular(ctx.base);\n      });\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\");\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ContadorComponent_Template_button_click_10_listener() {\n        return ctx.acumular(-ctx.base);\n      });\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"Hola mundo. Nombre app en app.component.ts: \", ctx.titulo, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.base);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" + \", ctx.base, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.num, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" - \", ctx.base, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(undefined);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,iBAAiB;EAJ9BC;IAMI,WAAM,GAAG,cAAc;IACvB,QAAG,GAAW,EAAE;IAChB,SAAI,GAAW,CAAC;;EAEhB;EACA;EACA;EACA;EAEAC,QAAQ,CAACC,KAAY;IACjB,IAAI,CAACC,GAAG,IAAID,KAAK;EACrB;;AAbSH,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCN9BC,0BAAI;MAAAA,YAAyD;MAAAA,iBAAK;MAClEA,0BAAI;MAAAA,4BAAY;MAAAA,8BAAQ;MAAAA,YAAQ;MAAAA,iBAAS;MASzCA,iCAAiC;MAAzBA;QAAA,OAASC,sBAAc;MAAA,EAAC;MAAED,YAAU;MAAAA,iBAAS;MACrDA,4BAAM;MAACA,YAAQ;MAAAA,iBAAO;MACtBA,kCAAkC;MAA1BA;QAAA,OAASC,uBAAe;MAAA,EAAC;MAAED,aAAU;MAAAA,iBAAS;MAGtDA,6BAAM;MAAAA,aAAa;MAAAA,iBAAO;;;MAftBA,eAAyD;MAAzDA,qFAAyD;MACrCA,eAAQ;MAARA,8BAAQ;MASEA,eAAU;MAAVA,0CAAU;MACrCA,eAAQ;MAARA,wCAAQ;MACoBA,eAAU;MAAVA,0CAAU;MAGvCA,eAAa;MAAbA,+BAAa","names":["ContadorComponent","constructor","acumular","valor","num","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Emma Velez\\Desktop\\Angular\\01-bases\\src\\app\\1.contador\\contador\\contador.component.ts","C:\\Users\\Emma Velez\\Desktop\\Angular\\01-bases\\src\\app\\1.contador\\contador\\contador.component.html"],"sourcesContent":["import {Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-contador',\r\n    templateUrl: 'contador.component.html'\r\n})\r\nexport class ContadorComponent {\r\n\r\n    titulo = 'Contador App';\r\n    num: number = 10;\r\n    base: number = 5;\r\n\r\n    // En este lado si que podemos usar la forma corta de sumar mientras que en el html no\r\n    // sumar() {\r\n    //   this.num += 1;\r\n    // }\r\n\r\n    acumular(valor:number){\r\n        this.num += valor;\r\n    }\r\n}","\r\n<h1>Hola mundo. Nombre app en app.component.ts:  {{ titulo }}</h1>\r\n<h3>La base es: <strong>{{base}}</strong></h3>\r\n<!-- Las doble llaves es para poner cualquier expresión de java, no solo para sacar variables -->\r\n\r\n\r\n<!-- Los eventos con () aunque la lógica no suele ir en la parte del template a no ser que sea un codigo muy sencillo suele ir en la parte del componente.ts -->\r\n<!-- <button (click)=\"num = num + 1;\"> + 1</button> -->\r\n\r\n<!-- <button (click)=\"sumar()\"> + 1</button> -->\r\n\r\n<button (click)=\"acumular(base)\"> + {{base}}</button>\r\n<span> {{num}} </span>\r\n<button (click)=\"acumular(-base)\"> - {{base}}</button>\r\n\r\n<!-- El undefined no existe en js por lo que no aparece -->\r\n<span>{{undefined}}</span>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}