{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/dbz.service\";\nimport * as i2 from \"@angular/common\";\nfunction PersonajesComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pers_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", pers_r1.nombre, \" - \", i0.ɵɵpipeBind1(2, 2, pers_r1.poder), \"\");\n  }\n}\nexport class PersonajesComponent {\n  //El input es para asociarselo en el personajes.html con las []\n  // @Input() personajes: Personaje[] = [];\n  get personajes() {\n    // Si no está el constructor haciendo referencia al servicio no podemos hacer referencia al array de personajes privados\n    return this.DbzService.personajes;\n  }\n  constructor(DbzService) {\n    this.DbzService = DbzService;\n  }\n}\nPersonajesComponent.ɵfac = function PersonajesComponent_Factory(t) {\n  return new (t || PersonajesComponent)(i0.ɵɵdirectiveInject(i1.DbzService));\n};\nPersonajesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PersonajesComponent,\n  selectors: [[\"app-personajes\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function PersonajesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Personajes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, PersonajesComponent_li_4_Template, 3, 4, \"li\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.personajes);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.DecimalPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIIA,0BAAqC;IAAAA,YAA0C;;IAAAA,iBAAK;;;;IAA/CA,eAA0C;IAA1CA,yFAA0C;;;ACKnF,OAAM,MAAOC,mBAAmB;EAE9B;EACA;EAEA,IAAIC,UAAU;IACZ;IACA,OAAO,IAAI,CAACC,UAAU,CAACD,UAAU;EACnC;EAEAE,YAAoBD,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAc;;AAVjCF,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRhCT,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MACnBA,qBAAI;MACJA,0BAAI;MACAA,kEAAoF;MACxFA,iBAAK;;;MADoBA,eAAc;MAAdA,wCAAc","names":["i0","PersonajesComponent","personajes","DbzService","constructor","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\personajes\\personajes.component.html","C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\personajes\\personajes.component.ts"],"sourcesContent":[" <!-- El number es para que ponga el numero separado por . o , segun los miles -->\n<h3>Personajes</h3>\n<hr>\n<ul>\n    <li *ngFor=\"let pers of personajes;\">{{pers.nombre}} - {{pers.poder | number }}</li>\n</ul>\n","import { Component, Input } from '@angular/core';\nimport { Personaje } from '../interfaces/dbz.interface';\nimport { DbzService } from '../services/dbz.service';\n\n@Component({\n  selector: 'app-personajes',\n  templateUrl: './personajes.component.html',\n\n})\nexport class PersonajesComponent {\n\n  //El input es para asociarselo en el personajes.html con las []\n  // @Input() personajes: Personaje[] = [];\n\n  get personajes(){\n    // Si no está el constructor haciendo referencia al servicio no podemos hacer referencia al array de personajes privados\n    return this.DbzService.personajes;\n  }\n\n  constructor(private DbzService: DbzService){}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}