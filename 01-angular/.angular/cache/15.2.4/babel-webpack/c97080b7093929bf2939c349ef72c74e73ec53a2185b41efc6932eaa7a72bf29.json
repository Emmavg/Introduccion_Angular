{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet AgregarComponent = class AgregarComponent {\n  // Esto es una injeccion de dependencias y es la forma corta de declarar una variable  \n  constructor(DbzService) {\n    this.DbzService = DbzService;\n    //El input es para asociarselo en el personajes.html con las []\n    // Creamos un nuevo objeto\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    };\n  }\n  // agregar(event:any){\n  //   // Evita que el boton de submit refresce todo el rato la pagina cuando le clicas lo podemos evitar importando en el module el FormsModule\n  //   event.preventDefault();\n  //   console.log(event);\n  // }\n  // cambiarNombre(event: any){\n  //   console.log(event);\n  // }\n  // @Output() onNuevoPers: EventEmitter<Personaje> = new EventEmitter();\n  agregar() {\n    // Si no escribes nada en el nombre validamos que no mande nada\n    if (this.nuevo.nombre.trim().length === 0) {\n      return;\n    }\n    console.log(this.nuevo);\n    // Mandamos el nuevo personaje para trabajar el evento, en el padre.html = main-page\n    // this.onNuevoPers.emit(this.nuevo);\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    };\n  }\n};\n__decorate([Input()], AgregarComponent.prototype, \"nuevo\", void 0);\nAgregarComponent = __decorate([Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html'\n})], AgregarComponent);\nexport { AgregarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAgBC,KAAK,QAAgB,eAAe;AAO/D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU3B;EACAC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAT9B;IAEA;IACS,UAAK,GAAc;MAC1BC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;KACR;EAG2C;EAE5C;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEAC,OAAO;IAEL;IACA,IAAI,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAC;MACxC;;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;IAEvB;IACA;IAEA,IAAI,CAACA,KAAK,GAAG;MACXH,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;KACR;EACH;CAED;AArCUO,YAARZ,KAAK,EAAE,+CAGP;AARUC,gBAAgB,eAJ5BF,SAAS,CAAC;EACTc,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE;CACd,CAAC,GACWb,gBAAgB,CA0C5B;SA1CYA,gBAAgB","names":["Component","Input","AgregarComponent","constructor","DbzService","nombre","poder","agregar","nuevo","trim","length","console","log","__decorate","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\agregar\\agregar.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Personaje } from '../interfaces/dbz.interface';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html',\n})\nexport class AgregarComponent {\n\n  //El input es para asociarselo en el personajes.html con las []\n\n  // Creamos un nuevo objeto\n  @Input() nuevo: Personaje = {\n    nombre: '',\n    poder: 0,\n  }\n  \n  // Esto es una injeccion de dependencias y es la forma corta de declarar una variable  \n  constructor(private DbzService: DbzService){}\n\n  // agregar(event:any){\n  //   // Evita que el boton de submit refresce todo el rato la pagina cuando le clicas lo podemos evitar importando en el module el FormsModule\n  //   event.preventDefault();\n  //   console.log(event);\n  // }\n\n  // cambiarNombre(event: any){\n  //   console.log(event);\n  // }\n\n  // @Output() onNuevoPers: EventEmitter<Personaje> = new EventEmitter();\n\n  agregar(){\n\n    // Si no escribes nada en el nombre validamos que no mande nada\n    if (this.nuevo.nombre.trim().length === 0){\n      return;\n    }\n    console.log(this.nuevo);\n\n    // Mandamos el nuevo personaje para trabajar el evento, en el padre.html = main-page\n    // this.onNuevoPers.emit(this.nuevo);\n\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}