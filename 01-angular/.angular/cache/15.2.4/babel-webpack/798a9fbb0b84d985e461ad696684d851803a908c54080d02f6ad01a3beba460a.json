{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AgregarComponent {\n  constructor() {\n    //El input es para asociarselo en el personajes.html con las []\n    this.personajes = [];\n    // Creamos un nuevo objeto\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    };\n  }\n  // agregar(event:any){\n  //   // Evita que el boton de submit refresce todo el rato la pagina cuando le clicas lo podemos evitar importando en el module el FormsModule\n  //   event.preventDefault();\n  //   console.log(event);\n  // }\n  // cambiarNombre(event: any){\n  //   console.log(event);\n  // }\n  agregar() {\n    // Si no escribes nada en el nombre validamos que no mande nada\n    if (this.nuevo.nombre.trim().length === 0) {\n      return;\n    }\n    console.log(this.nuevo);\n    console.log(this.personajes);\n    this.personajes.push(this.nuevo);\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    };\n  }\n}\nAgregarComponent.ɵfac = function AgregarComponent_Factory(t) {\n  return new (t || AgregarComponent)();\n};\nAgregarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AgregarComponent,\n  selectors: [[\"app-agregar\"]],\n  inputs: {\n    personajes: \"personajes\"\n  },\n  decls: 8,\n  vars: 2,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"placeholder\", \"Nombre\", \"name\", \"nombre\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Poder\", \"name\", \"poder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function AgregarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Agregar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AgregarComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.agregar();\n      });\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.nuevo.nombre = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AgregarComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.nuevo.poder = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵtext(7, \" Agregar \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevo.nombre);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevo.poder);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAJ7BC;IAME;IACS,eAAU,GAAgB,EAAE;IAGrC;IACA,UAAK,GAAc;MACjBC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;KACR;;EAED;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEAC,OAAO;IAEL;IACA,IAAI,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAC;MACxC;;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAAC;IACvBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;IAE5B,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAACN,KAAK,CAAC;IAChC,IAAI,CAACA,KAAK,GAAG;MACXH,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;KACR;EACH;;AApCWH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAY;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;MCP7BC,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,qBAAI;MAIJA,+BAA6B;MAAvBA;QAAA,OAAYC,aAAS;MAAA,EAAC;MAExBD,gCAKE;MADEA;QAAA;MAAA,EAA0B;MAJ9BA,iBAKE;MAOFA,gCAKE;MADEA;QAAA;MAAA,EAAyB;MAJ7BA,iBAKE;MACFA,iCAAsB;MAClBA,yBACJ;MAAAA,iBAAS;;;MAhBLA,eAA0B;MAA1BA,0CAA0B;MAY1BA,eAAyB;MAAzBA,yCAAyB","names":["AgregarComponent","constructor","nombre","poder","agregar","nuevo","trim","length","console","log","personajes","push","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\agregar\\agregar.component.ts","C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\agregar\\agregar.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Personaje } from '../interfaces/dbz.interface';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html',\n})\nexport class AgregarComponent {\n\n  //El input es para asociarselo en el personajes.html con las []\n  @Input() personajes: Personaje[] = [];\n\n\n  // Creamos un nuevo objeto\n  nuevo: Personaje = {\n    nombre: '',\n    poder: 0,\n  }\n  \n  // agregar(event:any){\n  //   // Evita que el boton de submit refresce todo el rato la pagina cuando le clicas lo podemos evitar importando en el module el FormsModule\n  //   event.preventDefault();\n  //   console.log(event);\n  // }\n\n  // cambiarNombre(event: any){\n  //   console.log(event);\n  // }\n\n  agregar(){\n\n    // Si no escribes nada en el nombre validamos que no mande nada\n    if (this.nuevo.nombre.trim().length === 0){\n      return;\n    }\n    console.log(this.nuevo);\n    console.log(this.personajes);\n\n    this.personajes.push(this.nuevo);\n    this.nuevo = {\n      nombre: '',\n      poder: 0\n    }\n  }\n  \n}\n","<h3>Agregar</h3>\n<hr>\n\n<!-- Enviamos el evento entero que genera el formulario -->\n<!-- <form (submit)=\"agregar($event)\"> -->\n<form (ngSubmit)=\"agregar()\">\n    <!-- Las llaves [] son para enlazar una propiedad/variable de el lado del componente -->\n    <input \n        type=\"text\" \n        placeholder=\"Nombre\"\n        name=\"nombre\"\n        [(ngModel)]=\"nuevo.nombre\"\n    />\n    <!-- Esta parte del código se puede cambiar por el ngModel -->\n    <!-- \n        [value]=\"nuevo.nombre\" \n        el input es para que a medida que escribes le manda al metodo de cambiar nombre pero con el ng model lo va actualizando en tiempo real de forma automática\n        (input)=\"cambiarNombre($event)\"\n        -->\n    <input \n        type=\"number\" \n        placeholder=\"Poder\"\n        name=\"poder\"\n        [(ngModel)]=\"nuevo.poder\"\n    />\n    <button type=\"submit\">\n        Agregar\n    </button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}