{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// Cuando es un servicio este tiene que ser el decorador\nexport class DbzService {\n  get personajes() {\n    // ... = operador spread. Como js manda todo por referencias podría ser posible modificar el getter por eso se pone para separar cada uno de los elementos de forma independiente del array y crea uno nuevo\n    return [...this._personajes];\n  }\n  constructor() {\n    this._personajes = [{\n      nombre: 'Goku',\n      poder: 15000\n    }, {\n      nombre: 'Vegeta',\n      poder: 7500\n    }];\n    console.log('Servicio inicializado');\n  }\n  agregarNuevoPersonaje(personaje) {\n    this._personajes.push(personaje);\n  }\n}\nDbzService.ɵfac = function DbzService_Factory(t) {\n  return new (t || DbzService)();\n};\nDbzService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DbzService,\n  factory: DbzService.ɵfac\n});","map":{"version":3,"mappings":";AAGA;AAEA,OAAM,MAAOA,UAAU;EAanB,IAAIC,UAAU;IACV;IACA,OAAO,CAAC,GAAG,IAAI,CAACC,WAAW,CAAC;EAChC;EAEAC;IAhBQ,gBAAW,GAAe,CAC9B;MACEC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE;KACR,EACD;MACED,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAE;KACR,CACJ;IAQGC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACxC;EAGAC,qBAAqB,CAACC,SAAoB;IACtC,IAAI,CAACP,WAAW,CAACQ,IAAI,CAACD,SAAS,CAAC;EACpC;;AAzBST,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAW,SAAVX,UAAU;AAAA","names":["DbzService","personajes","_personajes","constructor","nombre","poder","console","log","agregarNuevoPersonaje","personaje","push","factory"],"sourceRoot":"","sources":["C:\\Users\\Emma Velez\\Desktop\\Cursos\\introduccion_angular\\01-angular\\src\\app\\3.dbz\\services\\dbz.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Personaje } from \"../interfaces/dbz.interface\";\r\n\r\n// Cuando es un servicio este tiene que ser el decorador\r\n@Injectable()\r\nexport class DbzService {\r\n\r\n    private _personajes:Personaje[] = [\r\n        {\r\n          nombre: 'Goku',\r\n          poder: 15000\r\n        },\r\n        {\r\n          nombre: 'Vegeta',\r\n          poder: 7500\r\n        }\r\n    ];\r\n\r\n    get personajes(): Personaje [] {\r\n        // ... = operador spread. Como js manda todo por referencias podría ser posible modificar el getter por eso se pone para separar cada uno de los elementos de forma independiente del array y crea uno nuevo\r\n        return [...this._personajes];\r\n    }\r\n      \r\n    constructor(){\r\n        console.log('Servicio inicializado');\r\n    }\r\n\r\n    \r\n    agregarNuevoPersonaje(personaje: Personaje){\r\n        this._personajes.push(personaje);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}